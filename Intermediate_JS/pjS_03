Binding
Rather than relying on a function to be called with the correct this at the time of invocation, we can bind functions:

function thisName() {
    return this.name;
}

const newFunction = thisName.bind({ name: 'Ted' }); 

console.log(newFunction()); // Ted
console.log(thisName()); // undefined
 Notice that bind does not change the nature of the original function. It creates a new function that is bound with the provided this.

Once a function is bound, the binding cannot be overwritten. Let's say we tried to bind newFunction from above:

const newFunction2 = newFunction.bind({ name: 'Walt' });

console.log(newFunction2()); // Ted
